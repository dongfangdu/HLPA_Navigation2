import streamlit as st
import pandas as pd
import requests
import json

URL = "http://192.168.106.170:9996/v1/api/"

def judge_mrc():
    st.title("司法问答")

    # ===============
    # 概述
    # ===============
    st.header("♟ 概述 ♟")
    # st.write("司法问答是一种，通过给定司法资料，和自定发起问题，期望获取资料所描述的对应答案的一种能力\n")
    st.markdown("司法问答是，通过给定的`司法资料`，用户对其进行`自主提问`，并期望`获取资料里对应的答案`的一种语义理解能力")

    # ===============
    # 字段
    # ===============
    st.header("♟ 支持的案情案由字段 ♟")
    st.markdown("本能力暂时支持对以下案情案由进行发问并寻求答案")
    entity_df = pd.DataFrame({"字段": ["日利率", "月利率", "年利率", "抵押物", "质押物",
                                     "诉请金额", "认定金额", "裁决金额", "滞纳金"],
                              "样例提问": ["该案的日利率是多少", "双方约定的多少月利率", "该案涉及多少年利率",
                                       "被告的抵押物是什么", "双方以何物为质押物",
                                       "案件涉及的诉请金额是多少元", "认定金额有多少", "本案决定的裁决金额是多少",
                                       "滞纳金多少元"]})
    st.table(entity_df)

    # ===============
    # 样例体验
    # ===============
    st.header("♟ 样例体验 ♟")
    st.warning("体验环境为测试环境，建议司法资料 **每段不超过500字** ，解析可能存在延时")
    st.warning("不同段落的文本请换行输入")

    try:
        requests.get(url = URL + "ping")
    except:
        st.error("服务未开启，请联系ASR基础研发部")

    default_text = ["经审理查明，原告奇瑞徽银公司与被告王连成、李淑芳于2010年4月12日签订一份《奇瑞徽银汽车金融有限公司汽车抵押贷款合同》，约定：借款人、抵押人为被告王连成、共同借款人为被告李淑芳、贷款人、抵押权人为原告奇瑞徽银公司；贷款金额为人民币76800元；上述贷款仅限于借款人购买奇瑞汽车；贷款期限为60个月，自2010年4月15日至2015年4月15日；贷款本息采用“按月等额本息还款”的方式偿还，贷款人从贷款发放的次月起，按月偿还贷款本息1767.16元；如借款人的还款账户内资金不足以偿还当期贷款本息，则贷款人有权不予扣收，不予扣收的当期贷款本息将按逾期贷款处理；借款人承担因履行本合同所产生的相关费用，包括但不限于公证、保险、登记、税务等费用，以及贷款人为实现债权所发生的全部费用（包括但不限于诉讼费、执行费、保全费、公证费、差旅费、评估费、拍卖费、律师费等）。借款人未按本合同约定足额还本付息的，贷款人按国家利率管理机关规定计收罚息，罚息利率按本合同确定的贷款利率上浮50 % 计算，对未支付的利息按前述罚息标准计收复利；借款人未按期履行还款义务，贷款人有权要求解除合同，借款人应在合同解除之日起三个工作日内一次性提前偿还全部贷款本息，包括已经发生的全部罚息等；借款人未按前述约定偿还时，贷款人有权计收罚息和复利等。合同签订后，原告于2010年4月28日向被告王连成发放了借款人民币76800元，借款年利率13.5 %，逾期利率20.25 %。但两被告未能按约还款，截止2010年7月12日，两被告逾期应还金额达到3593.17元。原告奇瑞徽银公司遂诉至本院，并由此支出律师代理费4000元。上述事实有原告提交的身份证及户口簿、汽车抵押贷款合同、借据、贷款拖欠催收函、逾期应还利息计算明细单、委托代理合同、律师费发票及庭审笔录在卷佐证，本院予以确认。",
                    "本院认为：原、被告签订的《汽车抵押贷款合同》，内容合法，双方当事人意思表示真实，属有效合同，对合同双方均具有约束力。原告依约向被告王连成、李淑芳发放贷款，被告应当按照合同约定的还款方式和期限向原告偿还借款本息，但截止2010年7月12日，两被告逾期应还金额达到3593.17元，显然违反合同约定，其行为已构成违约，原告有权依约解除合同，并要求两被告偿还所有借款本息、赔偿原告实现债权的费用。故对原告要求解除原、被告签订的汽车抵押贷款合同，要求两被告归还借款本金76800元、利息3571.51元及自2010年8月27日起至实际给付之日止的利息（按合同约定的罚息利率即年利率20.25%计算），并承担原告实现债权费用4000元的诉讼请求依法予以支持。二被告经本院合法传唤拒不到庭，视为其放弃质证等相应权利。依据《中华人民共和国民事诉讼法》第一百三十条，《中华人民共和国合同法》第一百零七条、第二百零七条之规定，判决如下："]

    default_query_1 = "该案的抵押物是什么"
    default_query_2 = "年利率是多少"

    text_psg = st.text_area("🍄 请输入体验司法资料:", value = "\n".join(default_text), height = 200, key = "mrc_sample")

    text_qry_1 = st.text_input("🍄 请输入问题:", value = default_query_1, key = "query_1")
    if st.button("点击解析", key = "button_1"):
        try:
            parser_res = requests.post(url = URL + "parse", data = json.dumps({
                "p": text_psg,
                "q": text_qry_1.strip()
            })).json().get("answer", '')

            if parser_res.strip():
                st.table(pd.DataFrame({"answer": [parser_res]}))
            else:
                st.warning("未找到答案，等待模型优化迭代")

        except:
            st.error("解析失败，请稍后重试")

    text_qry_2 = st.text_input("🍄 请输入问题:", value=default_query_2, key="query_2")
    if st.button("点击解析", key = "button_2"):
        try:
            parser_res = requests.post(url=URL + "parse", data=json.dumps({
                "p": text_psg,
                "q": text_qry_2.strip()
            })).json().get("answer", '')

            if parser_res.strip():
                st.table(pd.DataFrame({"answer": [parser_res]}))
            else:
                st.warning("未找到答案，等待模型优化迭代")

        except:
            st.error("解析失败，请稍后重试")

    # ===============
    # API 接口文档
    # ===============
    st.header("♟ API 接口文档 ♟")
    if st.checkbox("点击查看 接口文档"):
        st.write("服务通过 HTTP/POST 进行服务解析请求\n")

        option = st.selectbox("入参/出参", ("入参 JSON", "出参 JSON"))
        if option == "入参 JSON":
            st.json({"p": "经审理查明...\\n本院认为...\\n",
                     "q": "双方约定的日利率是"})

            st.write('\n')
            st.table(pd.DataFrame({
                "属性": ["q", "p"],
                "类型": ["Optional[List[String], String]", "String"],
                "说明": ["待解析文本", "提问文本"]
            }))

        elif option == "出参 JSON":
            st.json({
                "answer": "0.25%"
            })

            st.write('\n')
            st.table(pd.DataFrame({
                "属性": ["answer"],
                "类型": ["String"],
                "说明": ["答案"]
            }))

    # ===============
    # 定制需求
    # ===============
    st.header("♟ 定制需求 ♟")
    if st.checkbox("定制需求"):
        st.write("该能力持续优化中\n")
        st.write("同时也支持场景定制化")

if __name__ == "__main__":
    judge_mrc()